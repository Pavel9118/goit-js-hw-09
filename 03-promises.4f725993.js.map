{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA3CAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OAC/C,MAAMC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OAEnD,GADAG,QAAQC,IAAIR,GACRA,EAAQ,GAAKK,EAAO,GAAKC,GAAU,EAErC,YADAG,EAAA1B,GAAS2B,OAAOC,QAAQ,yCAG1B,GAAIC,MAAMN,GAER,YADAG,EAAA1B,GAAS2B,OAAOC,QAAQ,gBAI5B,IAAK,IAAIE,EAAI,EAAGA,GAAKP,EAAQO,GAAK,EAC9B5B,EAAc4B,EAAGb,GAClBc,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOK,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEzE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOO,QAAQ,sBAAoB/B,QAAeC,MAAU,IAErEa,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onBtnSubmit);\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n  console.log(delay);\n  if (delay < 0 || step < 0 || amount <= 0) {\n    Notiflix.Notify.warning('Please enter a value greater than \"0\"');\n    return;\n  }\n  if (isNaN(amount)) {\n    Notiflix.Notify.warning('please enter');\n    return;\n  };\n  \nfor (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delay += step;\n  }\n  };\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","console","log","$parcel$interopDefault","Notify","warning","isNaN","i","then","success","catch","failure"],"version":3,"file":"03-promises.4f725993.js.map"}